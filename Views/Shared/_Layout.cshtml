@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject AppInfoSetting AppInfoSetting

@{
  var user = await UserManager.GetUserAsync(User);
}

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />

  <environment include="Development">
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link href="~/lib/sweetalert/sweetalert.css" rel="stylesheet" />
    <link href="~/css/app.css" rel="stylesheet" />
  </environment>
  <environment exclude="Development">
    <link href="~/css/vendors.min.css" rel="stylesheet" />
    <link href="~/css/app.min.css" rel="stylesheet" />
  </environment>

  @RenderSection("Styles", required: false)

  <title>@ViewBag.Title</title>
</head>

<body>
  <nav class="navbar navbar-expand-sm navbar-dark">
    <div class="container">
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="collapsibleNavbar">
        <ul class="navbar-nav ml-auto">
          @if (SignInManager.IsSignedIn(User))
          {
            var programs = User.FindFirst("Programs").Value;
            var claims = JsonConvert.DeserializeObject<List<ProgramClaim>>(programs);
            @if (claims.Any(c => c.Enabled))
            {
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Programs</a>
                <div class="dropdown-menu">
                  @foreach (var c in claims)
                  {
                    var disabled = c.Enabled ? "" : "disabled";
                    <a class="dropdown-item @disabled" asp-controller="@c.ControllerName" asp-action="get">@c.Name</a>
                  }
                </div>
              </li>  
            }
            @if (User.IsInRole(Roles.SUPER_ADMIN))
            {
              <li class="nav-item dropdown ml-4">
                <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Admin</a>
                <div class="dropdown-menu">
                  <a class="dropdown-item" asp-controller="user" asp-action="get">User</a>
                  <a class="dropdown-item" asp-controller="vendor" asp-action="get">Vendor</a>
                  <a class="dropdown-item" asp-controller="department" asp-action="get">Department</a>
                </div>
              </li>
            }
            <li class="nav-item dropdown ml-4">
              <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-user"></i>
              </a>
              <div class="dropdown-menu">
                <div class="user-item">
                  <div>Id: <span class="font-weight-bold">@user.Id</span></div>
                  <div>Name: <span class="font-weight-bold">@user.UserName</span></div>
                  @if (!string.IsNullOrEmpty(@user.Email))
                  {
                    <div>Email: <span class="font-weight-bold">@user.Email</span></div>
                  }
                </div>
                <div class="dropdown-divider"></div>
                <form class="d-block" method="post" asp-controller="account" asp-action="logout">
                  <button type="submit"  class="dropdown-item">Logout</button>
                </form>
              </div>
            </li>
          }
          else
          {
            <li class="nav-item">
              <a class="nav-link" asp-controller="account" asp-action="login">
                Login
              </a>
            </li>
          }
        </ul>
      </div>
    </div>
  </nav>
  <div id="main" class="container mt-4">
    <partial name="_StatusMessages"></partial>
    @RenderBody()
  </div>
  <environment include="Development">
    <script src="~/lib/jquery/jquery.js"></script>
    <script src="~/lib/popper/umd/popper.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.js"></script>
    <script src="~/lib/sweetalert/sweetalert-dev.js"></script>
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/lib/axios/axios.js"></script>
    <script src="~/js/app.js"></script>
  </environment>
  <environment exclude="Development">
    <script src="~/js/vendors.min.js"></script>
    <script src="~/js/app.min.js"></script>
  </environment>
  @RenderSection("Scripts", required: false)
</body>

</html>